plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id "com.github.node-gradle.node" version "7.0.0"
}

group = 'com'
version = '0.0.2'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

node {
	download = false
	version = '18.18.0'
	npmInstall.args.set(['--force', '--info'])
	nodeProjectDir.set(file("${project.projectDir}/src/main/js"));
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.session:spring-session-core'
	implementation 'org.apache.commons:commons-lang3:3.13.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.c4-soft.springaddons:spring-addons-starter-oidc:8.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server:3.4.0'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.session:spring-session-core'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

tasks.bootRun {
	configure {
		environment "spring.profiles.active" , "production"
	}
}

tasks.withType(JavaCompile).configureEach {
	options.incremental = true
}

tasks.named("compileJava") { outputs.upToDateWhen { false }  }

tasks.register('buildApp', NpmTask) {
	dependsOn npmInstall
	args = ['run', 'build']
}